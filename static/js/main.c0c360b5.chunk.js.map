{"version":3,"sources":["config.js","App.js","index.js"],"names":["dateHandler","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","useState","city","setCity","weather","setWeather","isError","setIsError","errorMessage","setErrorMessage","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","response","ok","json","Error","data","console","log","catch","error","message","name","sys","country","Date","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAEaA,G,MAAc,SAACC,GACxB,IAMIC,EAJO,CAAC,SAAS,SAAS,UAAU,YAAY,WAAW,SAC7D,YAGaD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EARS,CAAC,UAAU,WAAW,QAAQ,QAAQ,OACnD,OAAO,SAAS,YAAY,UAAU,WAAW,YAO9BL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,K,OC8DvBE,MAxEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KA2BA,OACE,qBAAKC,UAAmC,oBAAhBN,EAAQO,MAAyBP,EAAQO,KAAKC,KAAO,GAC1E,WAAsB,MADzB,SAEE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLC,YAAY,sBACZJ,UAAU,aACVK,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOC,QAClCA,MAAOhB,EACPiB,WApCK,SAACC,GACI,UAAdA,EAAMC,KACRC,MAAM,GAAD,ODZO,2CCYP,qBAAqBpB,EAArB,+BDXM,qCCYRqB,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,qCAGnBJ,MAAK,SAACK,GACLzB,EAAQ,IACRE,EAAWuB,GACXrB,GAAW,GACXsB,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GACNH,QAAQC,IAAIE,GACZzB,GAAW,GACXE,EAAgBuB,EAAMC,SACtB9B,EAAQ,YAmBTG,EACC,8BAAME,IAEN,8BAC0B,oBAAhBJ,EAAQO,KACd,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGN,EAAQ8B,KADX,KACmB9B,EAAQ+B,IAAIC,WAE/B,qBAAK1B,UAAU,OAAf,SAAuBpB,EAAY,IAAI+C,WAEzC,sBAAK3B,UAAU,cAAf,UACE,qBAAKA,UAAU,OAAf,SAAuB4B,KAAKC,MAAMnC,EAAQO,KAAKC,QAC/C,qBAAKF,UAAU,UAAf,SAA0BN,EAAQA,QAAQ,GAAGO,aAIjD,WC7Dd6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.c0c360b5.chunk.js","sourcesContent":["export const base=\"https://api.openweathermap.org/data/2.5/\"\r\nexport const key=\"7fa9c7f8bc04cdbcac5433207a81f3e8\"\r\nexport const dateHandler = (d) => {\r\n    let months = [\"January\",\"February\",\"March\",\"April\",\"June\",\r\n    \"July\",\"August\",\"September\",\"October\",\"November\",\"December\", ];\r\n    let days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`;\r\n  };","import { useState } from \"react\";\nimport \"./App.css\";\nimport { base, key, dateHandler } from \"./config\";\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const search = (event) => {\n    if (event.key === \"Enter\") {\n      fetch(`${base}weather?q=${city}&units=metric&appid=${key}`)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          } else {\n            throw new Error(\"Please enter correct PlaceName\");\n          }\n        })\n        .then((data) => {\n          setCity(\"\");\n          setWeather(data);\n          setIsError(false);\n          console.log(data);\n        })\n        .catch((error) => {\n          console.log(error);\n          setIsError(true);\n          setErrorMessage(error.message);\n          setCity(\"\");\n        });\n    }\n  };\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp > 14)\n     ? 'app warm' : 'app') : 'app'}>\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter your City....\"\n            className=\"search-bar\"\n            onChange={(e) => setCity(e.target.value)}\n            value={city}\n            onKeyPress={search}\n          />\n        </div>\n        {isError ? (\n          <div>{errorMessage}</div>\n        ) : (\n          <div>\n            {typeof weather.main != \"undefined\" ? (\n              <div>\n                <div className=\"location-box\">\n                  <div className=\"location\">\n                    {weather.name}, {weather.sys.country}\n                  </div>\n                  <div className=\"date\">{dateHandler(new Date())}</div>\n                </div>\n                <div className=\"weather-box\">\n                  <div className=\"temp\">{Math.round(weather.main.temp)}</div>\n                  <div className=\"weather\">{weather.weather[0].main}</div>\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}